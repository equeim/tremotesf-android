name: Build environment

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  build-container-image:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine whether we need to build image
        id: enable
        run: |
          if [[ $GITHUB_EVENT_NAME == schedule || $GITHUB_EVENT_NAME == workflow_dispatch ]]; then
            echo 'Build container image'
            echo '::set-output name=enabled::true'
            exit
          fi
          if [[ $GITHUB_EVENT_NAME == push ]]; then
            before=${{ github.event.before }}
          elif [[ $GITHUB_EVENT_NAME == pull_request ]]; then
            before='origin/${{ github.base_ref }}'
          else
            echo "Unknown event '$GITHUB_EVENT_NAME'"
            exit 1
          fi
          echo "Before commit is $before"
          changed_files="$(git diff --name-only $before HEAD)"
          echo "Changed files are $changed_files"
          if [[ $changed_files == *Dockerfile* || $changed_files == *build-environment.yml* ]]; then
            echo 'Build container image'
            echo '::set-output name=enabled::true'
          else
            echo 'Do not build container image'
            echo '::set-output name=enabled::false'
          fi

      - name: Log in to the container registry
        if: steps.enable.outputs.enabled == 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: steps.enable.outputs.enabled == 'true'
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}-build-environment
          tags: type=raw,value=latest

      - name: Create build environment container image
        if: steps.enable.outputs.enabled == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .github/workflows/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
