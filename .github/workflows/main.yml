name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}-build-environment:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Compute ccache cache key
        id: compute-ccache-key
        run: |
          ./.github/workflows/compute-ccache-key.sh '${{ hashFiles('**/*.gradle.kts', 'gradle-plugin/**/*.kt', '3rdparty/openssl/patches/*', '3rdparty/qt/patches/*') }}'

      - name: Restore ccache directory from cache
        uses: equeim/cache@v3-altered
        with:
          path: ${{ runner.temp }}/.ccache
          key: ${{ steps.compute-ccache-key.outputs.cache-key }}
          restore-keys: ${{ steps.compute-ccache-key.outputs.restore-keys }}
          save-cache: ${{ github.event_name == 'push' }}

      - name: Add Kotlin problem matcher
        uses: equeim/kotlin-problem-matcher@v1

      - name: Build the app
        uses: gradle/gradle-build-action@v2
        with:
          arguments: -P org.equeim.tremotesf.ccache=true build
          cache-read-only: ${{ github.event_name != 'push' }}
        env:
          GRADLE_USER_HOME: ${{ runner.temp }}/.gradle
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ runner.temp }}/.ccache
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 3
          CCACHE_MAXSIZE: 1G
          CCACHE_COMPILERCHECK: content

      - name: Archive debug APKs
        uses: actions/upload-artifact@v3
        with:
          name: debug-apks
          path: app/build/outputs/apk/*/debug/*.apk
          retention-days: ${{ github.event_name == 'push' && github.retention_days || 3 }}

      - name: Archive test and lint reports
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: |
            app/build/reports/*
            billing/build/reports/*
            common/build/reports/*
            libtremotesf/build/reports/*
            rpc/build/reports/*
            torrentfile/build/reports/*
          retention-days: ${{ github.event_name == 'push' && github.retention_days || 3 }}

      - name: Archive native dependencies build logs
        uses: actions/upload-artifact@v3
        with:
          name: 3rdparty-build-logs
          path: |
            3rdparty/*/build*/tremotesf.*.log
            3rdparty/*/build*/**/CMakeOutput.log
            3rdparty/*/build*/**/CMakeError.log
          retention-days: ${{ github.event_name == 'push' && github.retention_days || 3 }}
