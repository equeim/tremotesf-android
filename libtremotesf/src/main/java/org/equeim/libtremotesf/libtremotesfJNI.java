/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.equeim.libtremotesf;

public class libtremotesfJNI {

  public final static long instantToMillis(@androidx.annotation.Nullable org.threeten.bp.Instant instant) {
    return instant == null ? 0 : instant.toEpochMilli();
  }

  public final static @androidx.annotation.Nullable org.threeten.bp.Instant millisToInstant(long millis) {
    return millis == 0 ? null : org.threeten.bp.Instant.ofEpochMilli(millis);
  }

  public final static native long new_TorrentDataVector__SWIG_0();
  public final static native long new_TorrentDataVector__SWIG_1(long jarg1, TorrentDataVector jarg1_);
  public final static native long TorrentDataVector_capacity(long jarg1, TorrentDataVector jarg1_);
  public final static native void TorrentDataVector_reserve(long jarg1, TorrentDataVector jarg1_, long jarg2);
  public final static native boolean TorrentDataVector_isEmpty(long jarg1, TorrentDataVector jarg1_);
  public final static native void TorrentDataVector_clear(long jarg1, TorrentDataVector jarg1_);
  public final static native long new_TorrentDataVector__SWIG_2(int jarg1, long jarg2, TorrentData jarg2_);
  public final static native int TorrentDataVector_doSize(long jarg1, TorrentDataVector jarg1_);
  public final static native void TorrentDataVector_doAdd__SWIG_0(long jarg1, TorrentDataVector jarg1_, long jarg2, TorrentData jarg2_);
  public final static native void TorrentDataVector_doAdd__SWIG_1(long jarg1, TorrentDataVector jarg1_, int jarg2, long jarg3, TorrentData jarg3_);
  public final static native long TorrentDataVector_doRemove(long jarg1, TorrentDataVector jarg1_, int jarg2);
  public final static native long TorrentDataVector_doGet(long jarg1, TorrentDataVector jarg1_, int jarg2);
  public final static native long TorrentDataVector_doSet(long jarg1, TorrentDataVector jarg1_, int jarg2, long jarg3, TorrentData jarg3_);
  public final static native void TorrentDataVector_doRemoveRange(long jarg1, TorrentDataVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_TorrentDataVector(long jarg1);
  public final static native long new_TrackersVector__SWIG_0();
  public final static native long new_TrackersVector__SWIG_1(long jarg1, TrackersVector jarg1_);
  public final static native long TrackersVector_capacity(long jarg1, TrackersVector jarg1_);
  public final static native void TrackersVector_reserve(long jarg1, TrackersVector jarg1_, long jarg2);
  public final static native boolean TrackersVector_isEmpty(long jarg1, TrackersVector jarg1_);
  public final static native void TrackersVector_clear(long jarg1, TrackersVector jarg1_);
  public final static native long new_TrackersVector__SWIG_2(int jarg1, long jarg2, Tracker jarg2_);
  public final static native int TrackersVector_doSize(long jarg1, TrackersVector jarg1_);
  public final static native void TrackersVector_doAdd__SWIG_0(long jarg1, TrackersVector jarg1_, long jarg2, Tracker jarg2_);
  public final static native void TrackersVector_doAdd__SWIG_1(long jarg1, TrackersVector jarg1_, int jarg2, long jarg3, Tracker jarg3_);
  public final static native long TrackersVector_doRemove(long jarg1, TrackersVector jarg1_, int jarg2);
  public final static native long TrackersVector_doGet(long jarg1, TrackersVector jarg1_, int jarg2);
  public final static native long TrackersVector_doSet(long jarg1, TrackersVector jarg1_, int jarg2, long jarg3, Tracker jarg3_);
  public final static native void TrackersVector_doRemoveRange(long jarg1, TrackersVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_TrackersVector(long jarg1);
  public final static native long new_TorrentFilesVector__SWIG_0();
  public final static native long new_TorrentFilesVector__SWIG_1(long jarg1, TorrentFilesVector jarg1_);
  public final static native long TorrentFilesVector_capacity(long jarg1, TorrentFilesVector jarg1_);
  public final static native void TorrentFilesVector_reserve(long jarg1, TorrentFilesVector jarg1_, long jarg2);
  public final static native boolean TorrentFilesVector_isEmpty(long jarg1, TorrentFilesVector jarg1_);
  public final static native void TorrentFilesVector_clear(long jarg1, TorrentFilesVector jarg1_);
  public final static native long new_TorrentFilesVector__SWIG_2(int jarg1, long jarg2, TorrentFile jarg2_);
  public final static native int TorrentFilesVector_doSize(long jarg1, TorrentFilesVector jarg1_);
  public final static native void TorrentFilesVector_doAdd__SWIG_0(long jarg1, TorrentFilesVector jarg1_, long jarg2, TorrentFile jarg2_);
  public final static native void TorrentFilesVector_doAdd__SWIG_1(long jarg1, TorrentFilesVector jarg1_, int jarg2, long jarg3, TorrentFile jarg3_);
  public final static native long TorrentFilesVector_doRemove(long jarg1, TorrentFilesVector jarg1_, int jarg2);
  public final static native long TorrentFilesVector_doGet(long jarg1, TorrentFilesVector jarg1_, int jarg2);
  public final static native long TorrentFilesVector_doSet(long jarg1, TorrentFilesVector jarg1_, int jarg2, long jarg3, TorrentFile jarg3_);
  public final static native void TorrentFilesVector_doRemoveRange(long jarg1, TorrentFilesVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_TorrentFilesVector(long jarg1);
  public final static native long new_TorrentPeersVector__SWIG_0();
  public final static native long new_TorrentPeersVector__SWIG_1(long jarg1, TorrentPeersVector jarg1_);
  public final static native long TorrentPeersVector_capacity(long jarg1, TorrentPeersVector jarg1_);
  public final static native void TorrentPeersVector_reserve(long jarg1, TorrentPeersVector jarg1_, long jarg2);
  public final static native boolean TorrentPeersVector_isEmpty(long jarg1, TorrentPeersVector jarg1_);
  public final static native void TorrentPeersVector_clear(long jarg1, TorrentPeersVector jarg1_);
  public final static native long new_TorrentPeersVector__SWIG_2(int jarg1, long jarg2, Peer jarg2_);
  public final static native int TorrentPeersVector_doSize(long jarg1, TorrentPeersVector jarg1_);
  public final static native void TorrentPeersVector_doAdd__SWIG_0(long jarg1, TorrentPeersVector jarg1_, long jarg2, Peer jarg2_);
  public final static native void TorrentPeersVector_doAdd__SWIG_1(long jarg1, TorrentPeersVector jarg1_, int jarg2, long jarg3, Peer jarg3_);
  public final static native long TorrentPeersVector_doRemove(long jarg1, TorrentPeersVector jarg1_, int jarg2);
  public final static native long TorrentPeersVector_doGet(long jarg1, TorrentPeersVector jarg1_, int jarg2);
  public final static native long TorrentPeersVector_doSet(long jarg1, TorrentPeersVector jarg1_, int jarg2, long jarg3, Peer jarg3_);
  public final static native void TorrentPeersVector_doRemoveRange(long jarg1, TorrentPeersVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_TorrentPeersVector(long jarg1);
  public final static native long new_StringsVector__SWIG_0();
  public final static native long new_StringsVector__SWIG_1(long jarg1, StringsVector jarg1_);
  public final static native long StringsVector_capacity(long jarg1, StringsVector jarg1_);
  public final static native void StringsVector_reserve(long jarg1, StringsVector jarg1_, long jarg2);
  public final static native boolean StringsVector_isEmpty(long jarg1, StringsVector jarg1_);
  public final static native void StringsVector_clear(long jarg1, StringsVector jarg1_);
  public final static native long new_StringsVector__SWIG_2(int jarg1, String jarg2);
  public final static native int StringsVector_doSize(long jarg1, StringsVector jarg1_);
  public final static native void StringsVector_doAdd__SWIG_0(long jarg1, StringsVector jarg1_, String jarg2);
  public final static native void StringsVector_doAdd__SWIG_1(long jarg1, StringsVector jarg1_, int jarg2, String jarg3);
  public final static native String StringsVector_doRemove(long jarg1, StringsVector jarg1_, int jarg2);
  public final static native String StringsVector_doGet(long jarg1, StringsVector jarg1_, int jarg2);
  public final static native String StringsVector_doSet(long jarg1, StringsVector jarg1_, int jarg2, String jarg3);
  public final static native void StringsVector_doRemoveRange(long jarg1, StringsVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_StringsVector(long jarg1);
  public final static native long new_StringMap__SWIG_0();
  public final static native long new_StringMap__SWIG_1(long jarg1, StringMap jarg1_);
  public final static native long StringMap_Iterator_getNextUnchecked(long jarg1, StringMap.Iterator jarg1_);
  public final static native boolean StringMap_Iterator_isNot(long jarg1, StringMap.Iterator jarg1_, long jarg2, StringMap.Iterator jarg2_);
  public final static native String StringMap_Iterator_getKey(long jarg1, StringMap.Iterator jarg1_);
  public final static native String StringMap_Iterator_getValue(long jarg1, StringMap.Iterator jarg1_);
  public final static native void StringMap_Iterator_setValue(long jarg1, StringMap.Iterator jarg1_, String jarg2);
  public final static native void delete_StringMap_Iterator(long jarg1);
  public final static native boolean StringMap_isEmpty(long jarg1, StringMap jarg1_);
  public final static native void StringMap_clear(long jarg1, StringMap jarg1_);
  public final static native long StringMap_find(long jarg1, StringMap jarg1_, String jarg2);
  public final static native long StringMap_begin(long jarg1, StringMap jarg1_);
  public final static native long StringMap_end(long jarg1, StringMap jarg1_);
  public final static native int StringMap_sizeImpl(long jarg1, StringMap jarg1_);
  public final static native boolean StringMap_containsImpl(long jarg1, StringMap jarg1_, String jarg2);
  public final static native void StringMap_putUnchecked(long jarg1, StringMap jarg1_, String jarg2, String jarg3);
  public final static native void StringMap_removeUnchecked(long jarg1, StringMap jarg1_, long jarg2, StringMap.Iterator jarg2_);
  public final static native void delete_StringMap(long jarg1);
  public final static native long new_IntPair__SWIG_0();
  public final static native long new_IntPair__SWIG_1(int jarg1, int jarg2);
  public final static native long new_IntPair__SWIG_2(long jarg1, IntPair jarg1_);
  public final static native int IntPair_first_get(long jarg1, IntPair jarg1_);
  public final static native int IntPair_second_get(long jarg1, IntPair jarg1_);
  public final static native void delete_IntPair(long jarg1);
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1, IntVector jarg1_);
  public final static native long IntVector_capacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_reserve(long jarg1, IntVector jarg1_, long jarg2);
  public final static native boolean IntVector_isEmpty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native long new_IntVector__SWIG_2(int jarg1, int jarg2);
  public final static native int IntVector_doSize(long jarg1, IntVector jarg1_);
  public final static native void IntVector_doAdd__SWIG_0(long jarg1, IntVector jarg1_, int jarg2);
  public final static native void IntVector_doAdd__SWIG_1(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native int IntVector_doRemove(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_doGet(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_doSet(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void IntVector_doRemoveRange(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_IntPairVector__SWIG_0();
  public final static native long new_IntPairVector__SWIG_1(long jarg1, IntPairVector jarg1_);
  public final static native long IntPairVector_capacity(long jarg1, IntPairVector jarg1_);
  public final static native void IntPairVector_reserve(long jarg1, IntPairVector jarg1_, long jarg2);
  public final static native boolean IntPairVector_isEmpty(long jarg1, IntPairVector jarg1_);
  public final static native void IntPairVector_clear(long jarg1, IntPairVector jarg1_);
  public final static native long new_IntPairVector__SWIG_2(int jarg1, long jarg2, IntPair jarg2_);
  public final static native int IntPairVector_doSize(long jarg1, IntPairVector jarg1_);
  public final static native void IntPairVector_doAdd__SWIG_0(long jarg1, IntPairVector jarg1_, long jarg2, IntPair jarg2_);
  public final static native void IntPairVector_doAdd__SWIG_1(long jarg1, IntPairVector jarg1_, int jarg2, long jarg3, IntPair jarg3_);
  public final static native long IntPairVector_doRemove(long jarg1, IntPairVector jarg1_, int jarg2);
  public final static native long IntPairVector_doGet(long jarg1, IntPairVector jarg1_, int jarg2);
  public final static native long IntPairVector_doSet(long jarg1, IntPairVector jarg1_, int jarg2, long jarg3, IntPair jarg3_);
  public final static native void IntPairVector_doRemoveRange(long jarg1, IntPairVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntPairVector(long jarg1);
  public final static native String Peer_address_get(long jarg1, Peer jarg1_);
  public final static native String Peer_client_get(long jarg1, Peer jarg1_);
  public final static native long Peer_downloadSpeed_get(long jarg1, Peer jarg1_);
  public final static native long Peer_uploadSpeed_get(long jarg1, Peer jarg1_);
  public final static native double Peer_progress_get(long jarg1, Peer jarg1_);
  public final static native String Peer_flags_get(long jarg1, Peer jarg1_);
  public final static native void delete_Peer(long jarg1);
  public final static native int TorrentFile_id_get(long jarg1, TorrentFile jarg1_);
  public final static native long TorrentFile_path_get(long jarg1, TorrentFile jarg1_);
  public final static native long TorrentFile_size_get(long jarg1, TorrentFile jarg1_);
  public final static native long TorrentFile_completedSize_get(long jarg1, TorrentFile jarg1_);
  public final static native int TorrentFile_priority_get(long jarg1, TorrentFile jarg1_);
  public final static native boolean TorrentFile_wanted_get(long jarg1, TorrentFile jarg1_);
  public final static native void delete_TorrentFile(long jarg1);
  public final static native int Tracker_id(long jarg1, Tracker jarg1_);
  public final static native String Tracker_announce(long jarg1, Tracker jarg1_);
  public final static native String Tracker_AnnounceHostInfo_host_get(long jarg1, Tracker.AnnounceHostInfo jarg1_);
  public final static native boolean Tracker_AnnounceHostInfo_isIpAddress_get(long jarg1, Tracker.AnnounceHostInfo jarg1_);
  public final static native long new_Tracker_AnnounceHostInfo();
  public final static native void delete_Tracker_AnnounceHostInfo(long jarg1);
  public final static native long Tracker_announceHostInfo(long jarg1, Tracker jarg1_);
  public final static native int Tracker_status(long jarg1, Tracker jarg1_);
  public final static native String Tracker_errorMessage(long jarg1, Tracker jarg1_);
  public final static native int Tracker_peers(long jarg1, Tracker jarg1_);
  public final static native long Tracker_nextUpdateTime(long jarg1, Tracker jarg1_);
  public final static native void delete_Tracker(long jarg1);
  public final static native int TorrentData_id_get(long jarg1, TorrentData jarg1_);
  public final static native String TorrentData_hashString_get(long jarg1, TorrentData jarg1_);
  public final static native String TorrentData_name_get(long jarg1, TorrentData jarg1_);
  public final static native String TorrentData_magnetLink_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_status_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_error_get(long jarg1, TorrentData jarg1_);
  public final static native String TorrentData_errorString_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_queuePosition_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_totalSize_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_completedSize_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_leftUntilDone_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_sizeWhenDone_get(long jarg1, TorrentData jarg1_);
  public final static native double TorrentData_percentDone_get(long jarg1, TorrentData jarg1_);
  public final static native double TorrentData_recheckProgress_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_eta_get(long jarg1, TorrentData jarg1_);
  public final static native boolean TorrentData_metadataComplete_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_downloadSpeed_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_uploadSpeed_get(long jarg1, TorrentData jarg1_);
  public final static native boolean TorrentData_downloadSpeedLimited_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_downloadSpeedLimit_get(long jarg1, TorrentData jarg1_);
  public final static native boolean TorrentData_uploadSpeedLimited_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_uploadSpeedLimit_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_totalDownloaded_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_totalUploaded_get(long jarg1, TorrentData jarg1_);
  public final static native double TorrentData_ratio_get(long jarg1, TorrentData jarg1_);
  public final static native double TorrentData_ratioLimit_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_ratioLimitMode_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_seeders_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_leechers_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_peersLimit_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_addedDate_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_activityDate_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_doneDate_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_idleSeedingLimitMode_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_idleSeedingLimit_get(long jarg1, TorrentData jarg1_);
  public final static native String TorrentData_downloadDirectory_get(long jarg1, TorrentData jarg1_);
  public final static native String TorrentData_comment_get(long jarg1, TorrentData jarg1_);
  public final static native String TorrentData_creator_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_creationDate_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_bandwidthPriority_get(long jarg1, TorrentData jarg1_);
  public final static native boolean TorrentData_honorSessionLimits_get(long jarg1, TorrentData jarg1_);
  public final static native boolean TorrentData_singleFile_get(long jarg1, TorrentData jarg1_);
  public final static native boolean TorrentData_trackersAnnounceUrlsChanged_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_trackers_get(long jarg1, TorrentData jarg1_);
  public final static native long TorrentData_webSeeders_get(long jarg1, TorrentData jarg1_);
  public final static native int TorrentData_activeWebSeeders_get(long jarg1, TorrentData jarg1_);
  public final static native boolean TorrentData_isDownloadingStalled(long jarg1, TorrentData jarg1_);
  public final static native boolean TorrentData_isSeedingStalled(long jarg1, TorrentData jarg1_);
  public final static native void delete_TorrentData(long jarg1);
  public final static native void Server_name_set(long jarg1, Server jarg1_, String jarg2);
  public final static native String Server_name_get(long jarg1, Server jarg1_);
  public final static native void Server_address_set(long jarg1, Server jarg1_, String jarg2);
  public final static native String Server_address_get(long jarg1, Server jarg1_);
  public final static native void Server_port_set(long jarg1, Server jarg1_, int jarg2);
  public final static native int Server_port_get(long jarg1, Server jarg1_);
  public final static native void Server_apiPath_set(long jarg1, Server jarg1_, String jarg2);
  public final static native String Server_apiPath_get(long jarg1, Server jarg1_);
  public final static native void Server_proxyType_set(long jarg1, Server jarg1_, int jarg2);
  public final static native int Server_proxyType_get(long jarg1, Server jarg1_);
  public final static native void Server_proxyHostname_set(long jarg1, Server jarg1_, String jarg2);
  public final static native String Server_proxyHostname_get(long jarg1, Server jarg1_);
  public final static native void Server_proxyPort_set(long jarg1, Server jarg1_, int jarg2);
  public final static native int Server_proxyPort_get(long jarg1, Server jarg1_);
  public final static native void Server_proxyUser_set(long jarg1, Server jarg1_, String jarg2);
  public final static native String Server_proxyUser_get(long jarg1, Server jarg1_);
  public final static native void Server_proxyPassword_set(long jarg1, Server jarg1_, String jarg2);
  public final static native String Server_proxyPassword_get(long jarg1, Server jarg1_);
  public final static native void Server_https_set(long jarg1, Server jarg1_, boolean jarg2);
  public final static native boolean Server_https_get(long jarg1, Server jarg1_);
  public final static native void Server_selfSignedCertificateEnabled_set(long jarg1, Server jarg1_, boolean jarg2);
  public final static native boolean Server_selfSignedCertificateEnabled_get(long jarg1, Server jarg1_);
  public final static native void Server_selfSignedCertificate_set(long jarg1, Server jarg1_, byte[] jarg2);
  public final static native byte[] Server_selfSignedCertificate_get(long jarg1, Server jarg1_);
  public final static native void Server_clientCertificateEnabled_set(long jarg1, Server jarg1_, boolean jarg2);
  public final static native boolean Server_clientCertificateEnabled_get(long jarg1, Server jarg1_);
  public final static native void Server_clientCertificate_set(long jarg1, Server jarg1_, byte[] jarg2);
  public final static native byte[] Server_clientCertificate_get(long jarg1, Server jarg1_);
  public final static native void Server_authentication_set(long jarg1, Server jarg1_, boolean jarg2);
  public final static native boolean Server_authentication_get(long jarg1, Server jarg1_);
  public final static native void Server_username_set(long jarg1, Server jarg1_, String jarg2);
  public final static native String Server_username_get(long jarg1, Server jarg1_);
  public final static native void Server_password_set(long jarg1, Server jarg1_, String jarg2);
  public final static native String Server_password_get(long jarg1, Server jarg1_);
  public final static native void Server_updateInterval_set(long jarg1, Server jarg1_, int jarg2);
  public final static native int Server_updateInterval_get(long jarg1, Server jarg1_);
  public final static native void Server_timeout_set(long jarg1, Server jarg1_, int jarg2);
  public final static native int Server_timeout_get(long jarg1, Server jarg1_);
  public final static native void Server_autoReconnectEnabled_set(long jarg1, Server jarg1_, boolean jarg2);
  public final static native boolean Server_autoReconnectEnabled_get(long jarg1, Server jarg1_);
  public final static native void Server_autoReconnectInterval_set(long jarg1, Server jarg1_, int jarg2);
  public final static native int Server_autoReconnectInterval_get(long jarg1, Server jarg1_);
  public final static native long new_Server();
  public final static native void delete_Server(long jarg1);
  public final static native boolean ServerSettingsData_canRenameFiles(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_canShowFreeSpaceForPath(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_hasSessionIdFile(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_hasTableMode(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_rpcVersion_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_minimumRpcVersion_get(long jarg1, ServerSettingsData jarg1_);
  public final static native String ServerSettingsData_downloadDirectory_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_startAddedTorrents_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_trashTorrentFiles_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_renameIncompleteFiles_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_incompleteDirectoryEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native String ServerSettingsData_incompleteDirectory_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_ratioLimited_get(long jarg1, ServerSettingsData jarg1_);
  public final static native double ServerSettingsData_ratioLimit_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_idleSeedingLimited_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_idleSeedingLimit_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_downloadQueueEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_downloadQueueSize_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_seedQueueEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_seedQueueSize_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_idleQueueLimited_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_idleQueueLimit_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_downloadSpeedLimited_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_downloadSpeedLimit_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_uploadSpeedLimited_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_uploadSpeedLimit_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_alternativeSpeedLimitsEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_alternativeDownloadSpeedLimit_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_alternativeUploadSpeedLimit_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_alternativeSpeedLimitsScheduled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native long ServerSettingsData_alternativeSpeedLimitsBeginTime_get(long jarg1, ServerSettingsData jarg1_);
  public final static native long ServerSettingsData_alternativeSpeedLimitsEndTime_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_alternativeSpeedLimitsDays_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_peerPort_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_randomPortEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_portForwardingEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_encryptionMode_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_utpEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_pexEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_dhtEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native boolean ServerSettingsData_lpdEnabled_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_maximumPeersPerTorrent_get(long jarg1, ServerSettingsData jarg1_);
  public final static native int ServerSettingsData_maximumPeersGlobally_get(long jarg1, ServerSettingsData jarg1_);
  public final static native void delete_ServerSettingsData(long jarg1);
  public final static native long SessionStats_downloaded(long jarg1, SessionStats jarg1_);
  public final static native long SessionStats_uploaded(long jarg1, SessionStats jarg1_);
  public final static native int SessionStats_duration(long jarg1, SessionStats jarg1_);
  public final static native int SessionStats_sessionCount(long jarg1, SessionStats jarg1_);
  public final static native long new_SessionStats();
  public final static native void delete_SessionStats(long jarg1);
  public final static native long new_JniServerSettingsData();
  public final static native void JniServerSettingsData_setDownloadDirectory(long jarg1, JniServerSettingsData jarg1_, String jarg2);
  public final static native void JniServerSettingsData_setStartAddedTorrents(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setTrashTorrentFiles(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setRenameIncompleteFiles(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setIncompleteDirectoryEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setIncompleteDirectory(long jarg1, JniServerSettingsData jarg1_, String jarg2);
  public final static native void JniServerSettingsData_setRatioLimited(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setRatioLimit(long jarg1, JniServerSettingsData jarg1_, double jarg2);
  public final static native void JniServerSettingsData_setIdleSeedingLimited(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setIdleSeedingLimit(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setDownloadQueueEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setDownloadQueueSize(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setSeedQueueEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setSeedQueueSize(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setIdleQueueLimited(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setIdleQueueLimit(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setDownloadSpeedLimited(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setDownloadSpeedLimit(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setUploadSpeedLimited(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setUploadSpeedLimit(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setAlternativeSpeedLimitsEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setAlternativeDownloadSpeedLimit(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setAlternativeUploadSpeedLimit(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setAlternativeSpeedLimitsScheduled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setAlternativeSpeedLimitsBeginTime(long jarg1, JniServerSettingsData jarg1_, long jarg2);
  public final static native void JniServerSettingsData_setAlternativeSpeedLimitsEndTime(long jarg1, JniServerSettingsData jarg1_, long jarg2);
  public final static native void JniServerSettingsData_setAlternativeSpeedLimitsDays(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setPeerPort(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setRandomPortEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setPortForwardingEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setEncryptionMode(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setUtpEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setPexEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setDhtEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setLpdEnabled(long jarg1, JniServerSettingsData jarg1_, boolean jarg2);
  public final static native void JniServerSettingsData_setMaximumPeersPerTorrent(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void JniServerSettingsData_setMaximumPeersGlobally(long jarg1, JniServerSettingsData jarg1_, int jarg2);
  public final static native void delete_JniServerSettingsData(long jarg1);
  public final static native long new_JniRpc();
  public final static native void delete_JniRpc(long jarg1);
  public final static native void JniRpc_init(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_setServer(long jarg1, JniRpc jarg1_, long jarg2, Server jarg2_);
  public final static native void JniRpc_resetServer(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_connect(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_disconnect(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_setUpdateDisabled(long jarg1, JniRpc jarg1_, boolean jarg2);
  public final static native void JniRpc_addTorrentFile(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, long jarg4, IntVector jarg4_, long jarg5, IntVector jarg5_, long jarg6, IntVector jarg6_, long jarg7, StringMap jarg7_, int jarg8, boolean jarg9);
  public final static native void JniRpc_addTorrentLink(long jarg1, JniRpc jarg1_, String jarg2, String jarg3, int jarg4, boolean jarg5);
  public final static native void JniRpc_startTorrents(long jarg1, JniRpc jarg1_, long jarg2, IntVector jarg2_);
  public final static native void JniRpc_startTorrentsNow(long jarg1, JniRpc jarg1_, long jarg2, IntVector jarg2_);
  public final static native void JniRpc_pauseTorrents(long jarg1, JniRpc jarg1_, long jarg2, IntVector jarg2_);
  public final static native void JniRpc_removeTorrents(long jarg1, JniRpc jarg1_, long jarg2, IntVector jarg2_, boolean jarg3);
  public final static native void JniRpc_checkTorrents(long jarg1, JniRpc jarg1_, long jarg2, IntVector jarg2_);
  public final static native void JniRpc_reannounceTorrents(long jarg1, JniRpc jarg1_, long jarg2, IntVector jarg2_);
  public final static native void JniRpc_setTorrentsLocation(long jarg1, JniRpc jarg1_, long jarg2, IntVector jarg2_, String jarg3, boolean jarg4);
  public final static native void JniRpc_renameTorrentFile(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_getDownloadDirFreeSpace(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_getFreeSpaceForPath(long jarg1, JniRpc jarg1_, String jarg2);
  public final static native void JniRpc_setTorrentDownloadSpeedLimited(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, boolean jarg3);
  public final static native void JniRpc_setTorrentDownloadSpeedLimit(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentUploadSpeedLimited(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, boolean jarg3);
  public final static native void JniRpc_setTorrentUploadSpeedLimit(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentRatioLimitMode(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentRatioLimit(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, double jarg3);
  public final static native void JniRpc_setTorrentPeersLimit(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentHonorSessionLimits(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, boolean jarg3);
  public final static native void JniRpc_setTorrentBandwidthPriority(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentIdleSeedingLimitMode(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentIdleSeedingLimit(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentFilesEnabled(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, boolean jarg3);
  public final static native void JniRpc_setTorrentFilesWanted(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, long jarg3, IntVector jarg3_, boolean jarg4);
  public final static native void JniRpc_setTorrentFilesPriority(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, long jarg3, IntVector jarg3_, int jarg4);
  public final static native void JniRpc_torrentAddTrackers(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, long jarg3, StringsVector jarg3_);
  public final static native void JniRpc_torrentSetTracker(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, int jarg3, String jarg4);
  public final static native void JniRpc_torrentRemoveTrackers(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, long jarg3, IntVector jarg3_);
  public final static native void JniRpc_setTorrentPeersEnabled(long jarg1, JniRpc jarg1_, long jarg2, TorrentData jarg2_, boolean jarg3);
  public final static native void JniRpc_updateData(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onAboutToDisconnect(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onConnectionStateChanged(long jarg1, JniRpc jarg1_, int jarg2);
  public final static native void JniRpc_onErrorChanged(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onServerSettingsChanged(long jarg1, JniRpc jarg1_, long jarg2, JniServerSettingsData jarg2_);
  public final static native void JniRpc_onTorrentsUpdated(long jarg1, JniRpc jarg1_, long jarg2, IntPairVector jarg2_, long jarg3, TorrentDataVector jarg3_, long jarg4, TorrentDataVector jarg4_);
  public final static native void JniRpc_onTorrentFilesUpdated(long jarg1, JniRpc jarg1_, int jarg2, long jarg3, TorrentFilesVector jarg3_);
  public final static native void JniRpc_onTorrentPeersUpdated(long jarg1, JniRpc jarg1_, int jarg2, long jarg3, IntPairVector jarg3_, long jarg4, TorrentPeersVector jarg4_, long jarg5, TorrentPeersVector jarg5_);
  public final static native void JniRpc_onServerStatsUpdated(long jarg1, JniRpc jarg1_, long jarg2, long jarg3, long jarg4, SessionStats jarg4_, long jarg5, SessionStats jarg5_);
  public final static native void JniRpc_onTorrentAdded(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onTorrentFinished(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onTorrentAddDuplicate(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onTorrentAddError(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onTorrentFileRenamed(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onGotDownloadDirFreeSpace(long jarg1, JniRpc jarg1_, long jarg2);
  public final static native void JniRpc_onGotFreeSpaceForPath(long jarg1, JniRpc jarg1_, String jarg2, boolean jarg3, long jarg4);
  public final static native void JniRpc_director_connect(JniRpc obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void JniRpc_change_ownership(JniRpc obj, long cptr, boolean take_or_release);
  public final static native long moveFromVector__SWIG_0(long jarg1, TorrentData jarg1_);
  public final static native long moveFromVector__SWIG_1(long jarg1, TorrentFile jarg1_);
  public final static native long moveFromVector__SWIG_2(long jarg1, Peer jarg1_);
  public final static native long JniServerSettingsData_SWIGUpcast(long jarg1);

  public static void SwigDirector_JniRpc_onAboutToDisconnect(JniRpc jself) {
    jself.onAboutToDisconnect();
  }
  public static void SwigDirector_JniRpc_onConnectionStateChanged(JniRpc jself, int status) {
    jself.onConnectionStateChanged(RpcConnectionState.swigToEnum(status));
  }
  public static void SwigDirector_JniRpc_onErrorChanged(JniRpc jself, int error, String errorMessage, String detailedConnectionErrorMessage) {
    jself.onErrorChanged(RpcError.swigToEnum(error), errorMessage, detailedConnectionErrorMessage);
  }
  public static void SwigDirector_JniRpc_onServerSettingsChanged(JniRpc jself, long data) {
    jself.onServerSettingsChanged(new JniServerSettingsData(data, true));
  }
  public static void SwigDirector_JniRpc_onTorrentsUpdated(JniRpc jself, long removedIndexRanges, long changed, long added) {
    jself.onTorrentsUpdated(new IntPairVector(removedIndexRanges, false), new TorrentDataVector(changed, false), new TorrentDataVector(added, false));
  }
  public static void SwigDirector_JniRpc_onTorrentFilesUpdated(JniRpc jself, int torrentId, long changed) {
    jself.onTorrentFilesUpdated(torrentId, new TorrentFilesVector(changed, false));
  }
  public static void SwigDirector_JniRpc_onTorrentPeersUpdated(JniRpc jself, int torrentId, long removedIndexRanges, long changed, long added) {
    jself.onTorrentPeersUpdated(torrentId, new IntPairVector(removedIndexRanges, false), new TorrentPeersVector(changed, false), new TorrentPeersVector(added, false));
  }
  public static void SwigDirector_JniRpc_onServerStatsUpdated(JniRpc jself, long downloadSpeed, long uploadSpeed, long currentSession, long total) {
    jself.onServerStatsUpdated(downloadSpeed, uploadSpeed, new SessionStats(currentSession, true), new SessionStats(total, true));
  }
  public static void SwigDirector_JniRpc_onTorrentAdded(JniRpc jself, int id, String hashString, String name) {
    jself.onTorrentAdded(id, hashString, name);
  }
  public static void SwigDirector_JniRpc_onTorrentFinished(JniRpc jself, int id, String hashString, String name) {
    jself.onTorrentFinished(id, hashString, name);
  }
  public static void SwigDirector_JniRpc_onTorrentAddDuplicate(JniRpc jself) {
    jself.onTorrentAddDuplicate();
  }
  public static void SwigDirector_JniRpc_onTorrentAddError(JniRpc jself) {
    jself.onTorrentAddError();
  }
  public static void SwigDirector_JniRpc_onTorrentFileRenamed(JniRpc jself, int torrentId, String filePath, String newName) {
    jself.onTorrentFileRenamed(torrentId, filePath, newName);
  }
  public static void SwigDirector_JniRpc_onGotDownloadDirFreeSpace(JniRpc jself, long bytes) {
    jself.onGotDownloadDirFreeSpace(bytes);
  }
  public static void SwigDirector_JniRpc_onGotFreeSpaceForPath(JniRpc jself, String path, boolean success, long bytes) {
    jself.onGotFreeSpaceForPath(path, success, bytes);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
