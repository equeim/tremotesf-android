/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.equeim.libtremotesf;

public class ConnectionConfiguration {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ConnectionConfiguration(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ConnectionConfiguration obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(ConnectionConfiguration obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtremotesfJNI.delete_ConnectionConfiguration(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ConnectionConfiguration)) return false;
    final ConnectionConfiguration otherCasted = (ConnectionConfiguration) other;
    if (otherCasted.swigCPtr == swigCPtr) return true;
    if (otherCasted.swigCPtr != 0 && swigCPtr != 0) return swigEquals(otherCasted);
    return false;
  }

  public void setAddress(String value) {
    libtremotesfJNI.ConnectionConfiguration_address_set(swigCPtr, this, value);
  }

  public String getAddress() {
    return libtremotesfJNI.ConnectionConfiguration_address_get(swigCPtr, this);
}

  public void setPort(int value) {
    libtremotesfJNI.ConnectionConfiguration_port_set(swigCPtr, this, value);
  }

  public int getPort() {
    return libtremotesfJNI.ConnectionConfiguration_port_get(swigCPtr, this);
  }

  public void setApiPath(String value) {
    libtremotesfJNI.ConnectionConfiguration_apiPath_set(swigCPtr, this, value);
  }

  public String getApiPath() {
    return libtremotesfJNI.ConnectionConfiguration_apiPath_get(swigCPtr, this);
}

  public void setProxyType(ConnectionConfiguration.ProxyType value) {
    libtremotesfJNI.ConnectionConfiguration_proxyType_set(swigCPtr, this, value.swigValue());
  }

  public ConnectionConfiguration.ProxyType getProxyType() {
    return ConnectionConfiguration.ProxyType.swigToEnum(libtremotesfJNI.ConnectionConfiguration_proxyType_get(swigCPtr, this));
  }

  public void setProxyHostname(String value) {
    libtremotesfJNI.ConnectionConfiguration_proxyHostname_set(swigCPtr, this, value);
  }

  public String getProxyHostname() {
    return libtremotesfJNI.ConnectionConfiguration_proxyHostname_get(swigCPtr, this);
}

  public void setProxyPort(int value) {
    libtremotesfJNI.ConnectionConfiguration_proxyPort_set(swigCPtr, this, value);
  }

  public int getProxyPort() {
    return libtremotesfJNI.ConnectionConfiguration_proxyPort_get(swigCPtr, this);
  }

  public void setProxyUser(String value) {
    libtremotesfJNI.ConnectionConfiguration_proxyUser_set(swigCPtr, this, value);
  }

  public String getProxyUser() {
    return libtremotesfJNI.ConnectionConfiguration_proxyUser_get(swigCPtr, this);
}

  public void setProxyPassword(String value) {
    libtremotesfJNI.ConnectionConfiguration_proxyPassword_set(swigCPtr, this, value);
  }

  public String getProxyPassword() {
    return libtremotesfJNI.ConnectionConfiguration_proxyPassword_get(swigCPtr, this);
}

  public void setHttps(boolean value) {
    libtremotesfJNI.ConnectionConfiguration_https_set(swigCPtr, this, value);
  }

  public boolean getHttps() {
    return libtremotesfJNI.ConnectionConfiguration_https_get(swigCPtr, this);
  }

  public void setSelfSignedCertificateEnabled(boolean value) {
    libtremotesfJNI.ConnectionConfiguration_selfSignedCertificateEnabled_set(swigCPtr, this, value);
  }

  public boolean getSelfSignedCertificateEnabled() {
    return libtremotesfJNI.ConnectionConfiguration_selfSignedCertificateEnabled_get(swigCPtr, this);
  }

  public void setSelfSignedCertificate(byte[] value) {
    libtremotesfJNI.ConnectionConfiguration_selfSignedCertificate_set(swigCPtr, this, value);
  }

  public byte[] getSelfSignedCertificate() {
    return libtremotesfJNI.ConnectionConfiguration_selfSignedCertificate_get(swigCPtr, this);
}

  public void setClientCertificateEnabled(boolean value) {
    libtremotesfJNI.ConnectionConfiguration_clientCertificateEnabled_set(swigCPtr, this, value);
  }

  public boolean getClientCertificateEnabled() {
    return libtremotesfJNI.ConnectionConfiguration_clientCertificateEnabled_get(swigCPtr, this);
  }

  public void setClientCertificate(byte[] value) {
    libtremotesfJNI.ConnectionConfiguration_clientCertificate_set(swigCPtr, this, value);
  }

  public byte[] getClientCertificate() {
    return libtremotesfJNI.ConnectionConfiguration_clientCertificate_get(swigCPtr, this);
}

  public void setAuthentication(boolean value) {
    libtremotesfJNI.ConnectionConfiguration_authentication_set(swigCPtr, this, value);
  }

  public boolean getAuthentication() {
    return libtremotesfJNI.ConnectionConfiguration_authentication_get(swigCPtr, this);
  }

  public void setUsername(String value) {
    libtremotesfJNI.ConnectionConfiguration_username_set(swigCPtr, this, value);
  }

  public String getUsername() {
    return libtremotesfJNI.ConnectionConfiguration_username_get(swigCPtr, this);
}

  public void setPassword(String value) {
    libtremotesfJNI.ConnectionConfiguration_password_set(swigCPtr, this, value);
  }

  public String getPassword() {
    return libtremotesfJNI.ConnectionConfiguration_password_get(swigCPtr, this);
}

  public void setUpdateInterval(int value) {
    libtremotesfJNI.ConnectionConfiguration_updateInterval_set(swigCPtr, this, value);
  }

  public int getUpdateInterval() {
    return libtremotesfJNI.ConnectionConfiguration_updateInterval_get(swigCPtr, this);
  }

  public void setTimeout(int value) {
    libtremotesfJNI.ConnectionConfiguration_timeout_set(swigCPtr, this, value);
  }

  public int getTimeout() {
    return libtremotesfJNI.ConnectionConfiguration_timeout_get(swigCPtr, this);
  }

  public void setAutoReconnectEnabled(boolean value) {
    libtremotesfJNI.ConnectionConfiguration_autoReconnectEnabled_set(swigCPtr, this, value);
  }

  public boolean getAutoReconnectEnabled() {
    return libtremotesfJNI.ConnectionConfiguration_autoReconnectEnabled_get(swigCPtr, this);
  }

  public void setAutoReconnectInterval(int value) {
    libtremotesfJNI.ConnectionConfiguration_autoReconnectInterval_set(swigCPtr, this, value);
  }

  public int getAutoReconnectInterval() {
    return libtremotesfJNI.ConnectionConfiguration_autoReconnectInterval_get(swigCPtr, this);
  }

  public boolean swigEquals(ConnectionConfiguration rhs) {
    return libtremotesfJNI.ConnectionConfiguration_swigEquals(swigCPtr, this, ConnectionConfiguration.getCPtr(rhs), rhs);
  }

  public ConnectionConfiguration() {
    this(libtremotesfJNI.new_ConnectionConfiguration(), true);
  }

  public enum ProxyType {
    Default,
    Http,
    Socks5;

    public final int swigValue() {
      return swigValue;
    }

    public static ProxyType swigToEnum(int swigValue) {
      ProxyType[] swigValues = ProxyType.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (ProxyType swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + ProxyType.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private ProxyType() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private ProxyType(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private ProxyType(ProxyType swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
